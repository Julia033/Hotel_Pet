//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotel_Pet.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Nazarenko_IDZEntities : DbContext
    {
        public Nazarenko_IDZEntities()
            : base("name=Nazarenko_IDZEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Care> Cares { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Habitation> Habitations { get; set; }
        public virtual DbSet<Journal> Journals { get; set; }
        public virtual DbSet<Pet> Pets { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<CustomerPayment> CustomerPayments { get; set; }
        public virtual DbSet<Information_pet> Information_pet { get; set; }
    
        public virtual ObjectResult<Output_pet_Result> Output_pet(string last_name, string first_name, string patronymic, string nickname)
        {
            var last_nameParameter = last_name != null ?
                new ObjectParameter("Last_name", last_name) :
                new ObjectParameter("Last_name", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("First_name", first_name) :
                new ObjectParameter("First_name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("Patronymic", patronymic) :
                new ObjectParameter("Patronymic", typeof(string));
    
            var nicknameParameter = nickname != null ?
                new ObjectParameter("Nickname", nickname) :
                new ObjectParameter("Nickname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Output_pet_Result>("Output_pet", last_nameParameter, first_nameParameter, patronymicParameter, nicknameParameter);
        }
    
        public virtual int Update_date_leaving(Nullable<System.Guid> iD_pet, Nullable<System.DateTime> date_leaving)
        {
            var iD_petParameter = iD_pet.HasValue ?
                new ObjectParameter("ID_pet", iD_pet) :
                new ObjectParameter("ID_pet", typeof(System.Guid));
    
            var date_leavingParameter = date_leaving.HasValue ?
                new ObjectParameter("Date_leaving", date_leaving) :
                new ObjectParameter("Date_leaving", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_date_leaving", iD_petParameter, date_leavingParameter);
        }
    
        public virtual int UpdateAmountDeposited(Nullable<System.Guid> customer_ID, Nullable<decimal> depositAmount)
        {
            var customer_IDParameter = customer_ID.HasValue ?
                new ObjectParameter("customer_ID", customer_ID) :
                new ObjectParameter("customer_ID", typeof(System.Guid));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("depositAmount", depositAmount) :
                new ObjectParameter("depositAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAmountDeposited", customer_IDParameter, depositAmountParameter);
        }
    }
}
